{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/vue/app.js","webpack:///./public/vue/index.js","webpack:///./public/vue/plugins/index.js","webpack:///./public/vue/plugins/plugin_grid.js","webpack:///./public/vue/plugins/plugin_settings.js","webpack:///./public/vue/plugins/settings/boolean_setting.js","webpack:///./public/vue/plugins/settings/index.js","webpack:///./public/vue/plugins/settings/numeric_setting.js","webpack:///./public/vue/plugins/settings/setting_group_header.js","webpack:///./public/vue/plugins/settings/string_setting.js","webpack:///./public/vue/server_records.js","webpack:///./public/vue/shared_components/filters/format_date.js","webpack:///./public/vue/shared_components/filters/index.js","webpack:///./public/vue/shared_components/index.js","webpack:///./public/vue/shared_components/messaging/error_message.js","webpack:///./public/vue/shared_components/messaging/index.js","webpack:///./public/vue/shared_components/messaging/job_runner_modal.js","webpack:///./public/vue/shared_components/messaging/success_message.js","webpack:///./public/vue/shared_components/navigation/admin_nav_bar.js","webpack:///./public/vue/shared_components/navigation/admin_pill_nav.js","webpack:///./public/vue/shared_components/navigation/index.js","webpack:///./public/vue/sites/details/site_localization_selector.js","webpack:///./public/vue/sites/details/site_routing_info.js","webpack:///./public/vue/sites/index.js","webpack:///./public/vue/sites/list/active_site_setting_btn.js","webpack:///./public/vue/sites/list/inactive_site_setting_btn.js","webpack:///./public/vue/sites/list/site_grid.js","webpack:///./public/vue/sites/list/site_list_controls.js","webpack:///./public/vue/sites/list/site_pagination_bar.js","webpack:///./public/vue/sites/list/site_record.js","webpack:///./public/vue/sites/list/site_search_bar.js","webpack:///./public/vue/users/index.js","webpack:///./public/vue/users/login.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,gCAAgC;AAChC;AACA,CAAC;;;;;;;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F,6GAA6G;AAC7G,yFAAyF;AACzF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,gGAAgG,YAAY;AAC5G;AACA,6CAA6C,8BAA8B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,kGAAkG,YAAY;AAC9G;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC1GD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD,eAAe,aAAa,wBAAwB;AAC3G;AACA,6DAA6D,kCAAkC;AAC/F,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,qDAAqD,wDAAwD,YAAY;AACzH;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACpCD;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA,mDAAmD,qDAAqD;AACxG,oDAAoD,sDAAsD;AAC1G;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;AC5BD;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACLD;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACRD;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACzBD;AACA;AACA;AACA;AACA,kBAAkB,WAAW,IAAI,aAAa;AAC9C,4BAA4B,qBAAqB;AACjD,wBAAwB,eAAe;AACvC,yBAAyB,yCAAyC;AAClE,wBAAwB,iBAAiB;AACzC,wBAAwB,wBAAwB;AAChD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACnCD;AACA;AACA;AACA,kBAAkB,uBAAuB,GAAG,kBAAkB,GAAG,sBAAsB,GAAG,mBAAmB,GAAG,qBAAqB;AACrI;AACA,CAAC;;;;;;;;;;;;;;;;ACLD;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;ACtBD;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qCAAqC,UAAU,EAAE,KAAK;AACtD,SAAS;AACT;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD,WAAW;;AAEpE;;AAEA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,SAAS;AACT;AACA,qDAAqD,iCAAiC;AACtF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0CAA0C,YAAY,IAAI,cAAc,IAAI,YAAY;;AAExF;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sMAAsM,8BAA8B;AACpO;AACA;AACA,gGAAgG,aAAa;AAC7G;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC7ID;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACzBD;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAqD;AACtE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACjCD;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;ACfD;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,CAAC;;AAED,uBAAuB;;;;;;;;;;;;AClBvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,mBAAmB;AAC/E,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACtCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,kFAAkF;AAClF;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC5BD;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,SAAS;AACT;AACA;AACA,yEAAyE;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB,UAAU,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACjED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,mHAAmH;AAC3I;AACA,wBAAwB,uHAAuH;AAC/I;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACpBD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,qDAAqD;AACtG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,qDAAqD;AACtG;AACA,KAAK;AACL;AACA;AACA,wBAAwB,kFAAkF;AAC1G;AACA;AACA,wBAAwB,6FAA6F;AACrH;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC3CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+DAA+D,kCAAkC;AACjG;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4DAA4D,mBAAmB;AAC/E,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAiE,kBAAkB;AACnF,kBAAkB,eAAe;AACjC,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACvCD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,qDAAqD;AACtG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;AC3BD;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA,6DAA6D,uBAAuB;AACpF,kCAAkC,eAAe;AACjD;AACA,6DAA6D,uBAAuB;AACpF,sDAAsD,eAAe;AACrE;AACA;AACA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./public/vue/index.js\");\n","Vue.prototype.$bus = new Vue({});\nVue.prototype.refreshPage = function () {\n    window.location.href = window.location.href;\n};\n\nconst app = new Vue({\n    el: '#kronosapp',\n    data: {\n        message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam a dignissim quam. Phasellus mollis eros eget felis vehicula convallis. Etiam lobortis ut ligula ut vulputate. Donec interdum leo vitae sapien maximus gravida. Curabitur ac sollicitudin nibh, sit amet venenatis diam. Suspendisse euismod, nunc in lacinia ornare, nibh ligula lacinia lacus, quis placerat orci enim sit amet enim. In sem tellus, feugiat non mattis vitae, fermentum eu dolor. Fusce lobortis dolor leo, sit amet sodales tellus tempor ut. Mauris id placerat diam, a posuere velit. Suspendisse efficitur nulla eu ante tristique, non sollicitudin ipsum vehicula. Sed sed nunc diam. Phasellus ligula urna, scelerisque quis metus nec, ultricies scelerisque arcu. Cras turpis diam, euismod ut tortor nec, sollicitudin mattis arcu.\\n' +\n        '\\n' +\n        'Aenean placerat commodo viverra. Pellentesque et lobortis elit. Ut volutpat dignissim dignissim. Phasellus sagittis non neque ac tempus. Fusce ac velit accumsan, dignissim risus in, dapibus massa. Ut sed tincidunt est, vel scelerisque sapien. Nullam placerat mauris vestibulum dapibus egestas. Suspendisse vel ex sit amet lacus consequat sollicitudin sit amet euismod erat. Pellentesque pellentesque libero accumsan iaculis euismod. Fusce vel convallis purus. Proin vel pretium risus.\\n' +\n        '\\n' +\n        'Aliquam ullamcorper eu turpis ac luctus. Sed a luctus diam. Pellentesque scelerisque a dui in accumsan. Praesent porttitor tellus nec accumsan pulvinar. Ut mollis auctor est, mollis elementum risus commodo eu. Integer quis finibus est. Nulla luctus lacus eu dapibus maximus. Suspendisse vitae maximus tellus, at consectetur dolor. Suspendisse pulvinar neque quis leo commodo, in pellentesque ipsum fermentum. Integer laoreet velit ut fermentum tempor. Fusce at nisl et nunc ultricies consectetur. Praesent ornare dolor eget luctus ultricies. In lacinia turpis felis, sed dignissim est tincidunt ac.\\n' +\n        '\\n' +\n        'Integer sagittis sagittis tempor. Sed aliquam arcu sit amet leo interdum mollis eu ac tellus. Morbi non velit blandit, maximus arcu eget, aliquam velit. Suspendisse lacinia, leo vel aliquet sollicitudin, lorem nibh laoreet orci, in iaculis mi dolor eget quam. Duis luctus sapien vel viverra efficitur. Nulla vitae purus at magna consequat vehicula et vitae nunc. Nullam congue, augue vel commodo congue, lorem sem aliquet eros, sed auctor sapien purus non lorem.\\n' +\n        '\\n',\n        store: {},\n        navigation: [],\n        pills: [],\n        pluginData: {}\n    }\n});\n\nObject.keys(__vue_model).forEach(key => {\n    app[key] = __vue_model[key]; // @deprecated\n    app.store[key] = __vue_model[key];\n});\n","// import '../scss/test.scss'\nimport './shared_components'\nimport './plugins'\nimport './sites'\nimport './users'\nimport './server_records' // TODO: Move this to a folder\n\nimport './app'\n\nconsole.log(\"I am Kronos Titan of Time\");\n","import './plugin_grid'\nimport './plugin_settings'\nimport './settings'\n","Vue.component('plugin-installed-options', {\n    props: ['plugin', 'isActive'],\n    methods: {\n        resetSettings: function () {\n            this.$http.post(\"/api/plugins/reset_settings/\" + encodeURIComponent(this.plugin.uid))\n                .then(() => this.$bus.$emit('show-success-message', 'Successfully reset settings'))\n                .catch((error) => this.$bus.$emit('show-error-message', error.data));\n        },\n        initializePlugin: function () {\n            this.$http.post(\"/api/plugins/initialize/\" + encodeURIComponent(this.plugin.uid))\n                .then(() => this.$bus.$emit('show-success-message', 'Successfully re-initialized settings'))\n                .catch((error) => this.$bus.$emit('show-error-message', error.data));\n        },\n        uninstallPlugin: function () {\n            this.$http.post(\"/api/plugins/uninstall/\" + encodeURIComponent(this.plugin.uid))\n                .then((result) => {\n                    let jobId = result.data;\n                    this.$bus.$emit('show-modal', jobId);\n                })\n                .catch((error) => this.$bus.$emit('show-error-message', error.data));\n        }\n    },\n    template: `\n        <div class=\"btn-group plugin-setting-btn-group\">\n            <a class=\"plugin-settings-btn\" :href=\"'/kronos/plugins/' + plugin.uid + '/settings'\">\n                <i class=\"fa fa-cog\"></i>&nbsp;Settings\n            </a>\n            <button type=\"button\" class=\"btn btn-sm btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n                <i class=\"fa fa-sm fa-chevron-down\"></i>\n            </button>\n            <ul class=\"dropdown-menu\" role=\"menu\">\n                <li><a v-on:click=\"resetSettings\"><i class=\"fa fa-fw fa-refresh\"></i>&nbsp;Reset Settings</a></li>\n                <li><a v-on:click=\"initializePlugin\" v-if=\"!isActive\"><i class=\"fa fa-fw fa-check\"></i>&nbsp;Initialize</a></li>\n                <li><a v-on:click=\"uninstallPlugin\"><i class=\"fa fa-fw fa-ban\"></i>&nbsp;Uninstall</a></li>\n            </ul>\n        </div>\n    `\n});\n\nVue.component('plugin-info-row', {\n    props: ['plugin', 'settingState'],\n    template: `\n        <tr>        \n            <td class=\"plugin-name-column regular\"><a :href=\"'/kronos/plugins/' + plugin.uid\">{{plugin.uid}}</a></td>\n            <td></td>\n            <td class=\"plugin-date-column\">{{plugin.created | format-date}}</td>\n            <td class=\"plugin-settings-column\">\n                <plugin-installed-options v-if=\"settingState === 'active'\" :plugin=\"plugin\" :isActive=\"true\"></plugin-installed-options>\n                <plugin-installed-options v-if=\"settingState === 'inactive'\" :plugin=\"plugin\" :isActive=\"false\"></plugin-installed-options>\n                <plugin-available-options v-if=\"settingState === 'available'\" :plugin=\"plugin\"></plugin-available-options>\n            </td>\n        </tr>\n   `\n});\n\nVue.component('plugin-uninstalled-info-row', {\n    props: ['plugin'],\n    methods: {\n        install: function () {\n            this.$http.post(\"/api/plugins/install/\" + encodeURIComponent(this.plugin.uid))\n                .then((result) => {\n                    let jobId = result.data;\n                    this.$bus.$emit('show-modal', jobId);\n                })\n                .catch((error) =>  this.$bus.$emit('show-error-message', error.data));\n        }\n    },\n    template: `\n        <tr>\n            <td class=\"plugin-name-column uninstall\"><a :href=\"'/kronos/plugins/' + plugin.uid\">{{plugin.uid}}</a></td>\n            <td></td>\n            <td class=\"plugin-description-column\">{{plugin.description}}</td>\n            <td class=\"plugin-settings-column\">\n                <div class=\"btn-group plugin-setting-btn-group\">\n                    <a class=\"plugin-settings-btn\" v-on:click=\"install\">\n                        <span class=\"fa fa-hdd-o\"></span>&nbsp;Install\n                    </a>\n                </div>\n            </td>\n        </tr>\n   `\n});\nVue.component('plugin-grid', {\n    props: ['pluginList', 'listTitle', 'settingState'],\n    template: `\n   <div class=\"plugin-grid panel panel-default\">\n        <div class=\"panel-heading\">\n            {{listTitle}}&nbsp;\n            <i class=\"fa fa-info-circle\" data-toggle=\"tooltip\" data-placement=\"bottom\"></i>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>                \n                    <th>Name</th>\n                    <th></th>\n                    <th>Installed On</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <plugin-uninstalled-info-row  v-for=\"plugin in pluginList\" :key=\"plugin.uid\" v-if=\"settingState === 'available'\" :plugin=\"plugin\" :setting-state=\"settingState\"></plugin-uninstalled-info-row>                \n                <plugin-info-row  v-for=\"plugin in pluginList\" :key=\"plugin.uid\" v-if=\"settingState !== 'available'\" :plugin=\"plugin\" :setting-state=\"settingState\"></plugin-info-row>                \n            </tbody>\n        </table>\n    </div>\n   `\n});\n","Vue.component('plugin-settings', {\n    props: ['pluginUid', 'settings'],\n    data: function () {\n        return {\n            _settings: this.settings\n        }\n    },\n    methods: {\n        submit: function () {\n            this.$http.post(`/actions/kronos/plugins/${this.pluginUid}/settings`, {settings: this.settings})\n                .then((resp) => {\n                    this.$bus.$emit('show-success-message', {message: resp.data, refresh: true});\n                })\n                .catch((err) => {\n                    this.$bus.$emit('show-error-message', err.data);\n                });\n        }\n    },\n    template: `\n        <div class=\"admin-plugin-settings-list\">\n            <div v-for=\"setting in settings\">\n                <setting-group-header :setting=\"setting\" v-if=\"setting.isHeading && setting.heading !== 'Default'\"></setting-group-header>\n                <text-setting :setting=\"setting\" v-if=\"setting.type === 'text'\"></text-setting>\n                <boolean-setting :setting=\"setting\" v-if=\"setting.type === 'checkbox'\"></boolean-setting>\n            </div>\n            <hr> \n            <div class=\"admin-plugin-setting-control-bar\">\n                <a class=\"btn btn-default\" href=\"/kronos/plugins\">\n                    <i class=\"fa fa-ban\"></i>&nbsp;Cancel\n                </a>\n                <a class=\"btn btn-primary btn-save\" @click=\"submit\">\n                    <i class=\"fa fa-save\" ng-class=\"{'fa-save': !saving, 'fa-circle-o-notch fa-spin': saving}\"></i>&nbsp;Save\n                </a>\n            </div>   \n        </div>\n    `\n});\n","Vue.component('boolean-setting', {\n    props: ['setting'],\n\n    data: function () {\n        return {_setting: this.setting};\n    },\n    methods: {\n        setStatusTrue: function () {\n            this.setting.value = true;\n            console.log(this.setting.value);\n        },\n        setStatusFalse: function () {\n            this.setting.value = false;\n            console.log(this.setting.value)\n        },\n        getValueStyle: function () {\n            return this.setting.value;\n        }\n    },\n    template: `\n        <div class=\"admin-plugin-setting\">\n            <label>{{setting.displayName}}</label>\n            <div class=\"btn-group\">\n                <a @click=\"setStatusTrue\" :class=\"{'selected-btn': getValueStyle(), 'setting-btn': true}\">Yes</a>\n                <a @click=\"setStatusFalse\" :class=\"{'selected-btn': !getValueStyle(), 'setting-btn': true}\">No</a>\n            </div>\n        </div>\n    `\n});\n","import './boolean_setting'\nimport './numeric_setting'\nimport './string_setting'\nimport './setting_group_header'\n","Vue.component('numeric-setting', {\n    props: ['setting'],\n    template: `\n        \n    `\n});\n","Vue.component('setting-group-header', {\n    props: ['setting'],\n    template: `\n        <div class=\"setting-group-heading\">\n            <h3>{{setting.heading}}</h3>\n            <hr>\n        </div>\n    `\n});\n","Vue.component('text-setting', {\n    props: ['setting'],\n\n    data: function () {\n        return {_setting: this.setting};\n    },\n    methods: {\n        setStatusTrue: function () {\n            this.setting.value = true;\n            console.log(this.setting.value);\n        },\n        setStatusFalse: function () {\n            this.setting.value = false;\n            console.log(this.setting.value)\n        },\n        getValueStyle: function () {\n            return this.setting.value;\n        }\n    },\n    template: `\n        <div class=\"admin-plugin-setting\">\n            <label>{{setting.displayName}}</label>\n            <input class=\"form-control text-input\" v-model=\"setting.value\">\n        </div>\n    `\n});\n","Vue.component('server-record', {\n   props: ['record'],\n   template: `\n        <tr ng-repeat=\"val in cluster\" class=\"ng-scope\">\n            <td>{{record.ip}}::{{record.port}}</td>\n            <td title=\"1\">{{record.process_type}}</td>\n            <td><span>{{record.uptime}}</span> Secs</td>\n            <td><span> {{record.mem_usage.heapUsed / 1024 / 1024}}</span> MB</td>\n            <td><span>{{record.requests}}</span></td>\n            <td><span>{{record.currentRequests}}</span></td>\n        </tr> \n   ` // TODO: Eval if there is more good data to show here\n});\nVue.component('server-record-table', {\n    props: ['serverRecordList'],\n    methods: {\n        // TODO: implement the get that refreshes this table\n    },\n    template: `\n        <table class=\"table table-hover\">\n            <thead>\n                <tr class=\"thead-light\">\n                    <th>Server</th>\n                    <th>Process Type</th>\n                    <th>Uptime</th>\n                    <th>Memory Used</th>\n                    <th>Requests</th>\n                    <th>Current Requests </th>\n                </tr>\n            </thead>\n            <tbody>\n                <server-record v-for=\"record in serverRecordList\" v-bind:record=\"record\"></server-record>         \n            </tbody>\n        </table>\n    `\n});\n","Vue.filter('format-date', function (date) {\n    if (date) {\n        let dateObj = new Date(date);\n        return `${dateObj.getMonth() + 1}/${dateObj.getDate()}/${dateObj.getFullYear()} ${dateObj.getHours()}:${dateObj.getMinutes()}`;\n    }\n});\n","import './format_date'\n","import './navigation'\nimport './messaging'\nimport './filters'\n","Vue.component('error-message', {\n    created: function () {\n        this.$bus.$on('show-error-message', (message) => this.updateMessage(message));\n    },\n    data: function () {\n        return {\n            message: ''\n        };\n    },\n    methods: {\n        updateMessage: function (message) {\n            this.message = message;\n        },\n        clearMessage: function () {\n            this.message = '';\n        }\n    },\n    template: `\n        <div v-if=\"message\" class=\"alert alert-danger\"> \n            <span>{{message}} </span><span class=\"alert-clear-btn\" @click=\"clearMessage\">X</span>\n        </div>\n    `\n});\n","import './success_message'\nimport  './error_message'\nimport './job_runner_modal'\n","Vue.component('job-runner-modal', {\n    created: function () {\n        this.$bus.$on('show-modal', (jobId) => this.runModal(jobId));\n    },\n   data: function () {\n       return {\n           actionError: '',\n           actionIsComplete: false,\n           actionProgress: 0,\n           consoleOutput: '',\n           _logStartingPoint: 0,\n           _nextJobStatusHandler: null,\n           _nextLogRetrieveHandler: null\n       };\n    },\n    methods: {\n        closeAndRefresh: function () {\n            window.location.reload();\n        },\n        runModal: function (result) {\n            let jobId = result && result.data;\n\n            $('#progress_modal').modal({});\n\n            this._resetModalDataModel();\n            this._retrieveLogs(jobId);\n            this._retrieveJobStatus(jobId);\n        },\n        _resetModalDataModel: function () {\n            this.actionError = '';\n            this.actionIsComplete = false;\n            this.actionProgress = 0;\n            this.consoleOutput = '';\n            this._logStartingPoint = 0;\n            this._nextJobStatusHandler = null;\n            this._nextLogRetrieveHandler = null;\n        },\n        _doAction: function (actionType, identifier, data) {\n            return this.$http.post(\"/api/jobs/\" + actionType + \"/\" + encodeURIComponent(identifier), data)\n                .then((result) => {\n                    if (result.data && result.data.data && result.data.data.status === 'ERRORED') {\n                        throw {message: result.data.data.error};\n                    }\n                    return result;\n                })\n                .catch((err) => this._handleError(err));\n        },\n        _handleError: function (err) {\n            this.actionIsComplete = true;\n            this.actionError = err.message;\n        },\n        _addToLog: function (line) {\n            let lineStart = this.consoleOutput.length ? '\\n' : '';\n\n            this.consoleOutput += `${lineStart}${line}`;\n        },\n        _retrieveJobStatus: function(jobId) {\n            return this._doAction('get', jobId, {})\n                .then(result => {\n                    if (!result || !result.data || !result.data.data) {\n                        return this._handleError(new Error('Result did not have data.  Most likely a Job ID was not valid.  Try restarting the task.'));\n                    }\n                    let data = result.data.data; // TODO: Fix this on the API side\n                    let progress = data.progress;\n\n                    if (!isNaN(progress)) {\n                        this.actionProgress = progress.toString();\n                    }\n\n                    if (data.status === 'RUNNING') {\n                        return this._nextJobStatusHandler = setTimeout(this._retrieveJobStatus.bind(this, jobId), 1000);\n                    }\n                    else if(data.status === 'COMPLETED') {\n                        this.actionIsComplete = true;\n                    }\n\n                    setTimeout(() => {\n                        clearTimeout(this._nextLogRetrieveHandler); // immediately call the last cursor\n\n                        let resultLine = data.status || '';\n                        resultLine += data.errors ? `: ${data.error}` : '';\n\n                        this._addToLog(resultLine);\n\n                       this.closeAndRefresh();\n                    }, 1500);\n                })\n        },\n        _retrieveLogs: function (jobId) {\n            return this._doAction('getLogs', jobId, {starting: this._logStartingPoint})\n                .then((result) => {\n                    if (!result || !result.data || !result.data.data || !result.data.data.length) {\n                        return this._nextLogRetrieveHandler = setTimeout(this._retrieveLogs.bind(this, jobId), 2000);\n                    }\n\n                    let data = result.data.data;\n\n                    let nextStarting = this._logStartingPoint;\n                    data.forEach(res => {\n                        this._addToLog(`${res.created}:[${res.worker_id}] ${res.message}`);\n\n                        let date = new Date(res.created).getTime();\n                        if(date > nextStarting) {\n                            nextStarting = date;\n                        }\n                    });\n\n                    //offset so we don't get repeats\n                    this._logStartingPoint = nextStarting + 1;\n\n                    //check for more log entries\n                    return this._nextLogRetrieveHandler = setTimeout(this._retrieveLogs.bind(this, jobId), 2000);\n                });\n        }\n    },\n    template: `\n        <div id=\"progress_modal\" class=\"modal fade\" data-backdrop=\"static\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">\n                            <span v-if=\"actionIsComplete\">Action is Complete!</span>\n                            <span v-else>Action is in progress...</span>\n                        </h4>\n                    </div>\n                    <div class=\"modal-body loading-modal-content\">\n                        <div class=\"progress\">\n                            <div class=\"progress-bar progress-bar-info progress-bar-striped active\" role=\"progressbar\" :aria-valuenow=\"actionProgress\" aria-valuemin=\"0\" aria-valuemax=\"100\" :style=\"{'width': actionProgress + '%'}\"></div>\n                        </div>\n                        <textarea class=\"progress-console\" rows=\"5\" wrap=\"off\" v-model=\"consoleOutput\" v-if=\"consoleOutput.length\"></textarea>\n                        <div class=\"alert alert-danger\" v-if=\"actionError\">An Error Occurred: {{actionError}}</div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-default\" v-on:click=\"closeAndRefresh\" :disabled=\"!actionIsComplete\">\n                            <i class=\"fa fa-check\"></i>&nbsp;Okay\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `\n});\n","Vue.component('success-message', {\n    created: function () {\n        this.$bus.$on('show-success-message', (params) => this.updateMessage(params));\n    },\n    data: function () {\n        return {\n            message: ''\n        };\n    },\n    methods: {\n        updateMessage: function (params = {}) {\n            this.message = params.message || params;\n            setTimeout(() => params.refresh ? this.refreshPage() : this.clearMessage(), 2000);\n        },\n        clearMessage: function () {\n          this.message = '';\n        }\n    },\n    template: `\n        <transition name=\"fade\">\n            <div v-if=\"message\" class=\"alert alert-success\"> \n                <span>{{message}} </span> <span class=\"alert-clear-btn\" @click=\"clearMessage\">X</span>\n            </div>\n        </transition>\n    `\n});\n","Vue.component('admin-nav-item', {\n    props: ['item'],\n    template: `\n        <a :class=\"'admin-nav-item ' + item.active\" :href=\"item.href\">\n            <span class=\"fa fa-fw\" :class=\"'fa-'+item.icon\"></span> {{item.title}}\n        </a>\n    `\n});\nVue.component('admin-nav-bar', {\n    props: ['itemList'],\n    methods: {\n      getId: function (item) {\n          return item.id ?\n              item.id :\n              `${item.title.toLowerCase().trim().replace(/\\s+/g, '-')}-nav-item`;\n      }\n    },\n    template: `\n        <ul class=\"admin-nav-list\">\n            <li class=\"admin-nav-row\" v-for=\"item in itemList\">\n                <admin-nav-item  v-if=\"!item.children\" :item=\"item\"></admin-nav-item>\n                <div v-if=\"item.children\">\n                    <a data-toggle=\"collapse\" :data-target=\"'#' + getId(item)\">\n                        <admin-nav-item :item=\"item\"></admin-nav-item>\n                    </a>\n\n                    <div :id=\"getId(item)\" class=\"admin-sub-nav-list collapse\">\n                        <admin-nav-bar :item-list=\"item.children\"></admin-nav-bar>\n                    </div>\n                </div>\n            </li>\n        </ul>\n   `\n});\n","Vue.component('pill', {\n   props: ['pill'],\n   template: `\n        <a :id=\"pill.name\" class=\"btn-primary pill\" :href=\"pill.href\">\n            <span class=\"fa fa-fw\" :class=\"'fa fa-fw fa-'+pill.icon\"></span>{{pill.title}}\n        </a>\n   `\n});\nVue.component('pill-nav', {\n    props: ['pills'],\n    template: `\n        <div id=\"pill-nav\">\n            <pill v-for=\"pill in pills\" :key=\"pill.id\" :pill=\"pill\"></pill>\n        </div>\n    `\n});\n","import './admin_pill_nav'\nimport './admin_nav_bar'\n","Vue.component('site-localization-selector', {\n    props: ['availableLocales'],\n    data: function () {\n        return {\n            _availableLocales: this.availableLocales\n        }\n    },\n    template: `\n        <div class=\"locale-selector-widget\">\n            <ul>\n                <li v-for=\"locale in availableLocales\"> \n                    <input type=\"checkbox\" v-model=\"locale.selected\"> {{locale.name}}\n                </li>\n            </ul>\n        </div>\n    `\n});\n\n// margin: 5px 5px 0 0; for input checkbox\n","Vue.component('site-routing-form', {\n   props: ['site'],\n   data: function () {\n        return {\n            _site: this.site\n        }\n   },\n    methods: {\n\n    },\n    template: `\n        <div class=\"site-routing-row\">\n            <label>Display Name</label>\n            <input class=\"form-control\" v-model=\"site.displayName\">\n            <label>Hostname</label>\n            <input class=\"form-control\" v-model=\"site.hostname\">\n        </div>\n        `\n});\n","import './list/site_grid'\nimport './list/site_list_controls'\nimport './details/site_localization_selector'\nimport './list/site_pagination_bar'\nimport './details/site_routing_info'\nimport './list/site_search_bar'\nimport './list/active_site_setting_btn'\nimport './list/inactive_site_setting_btn'\nimport './list/site_record'\n","Vue.component('active-site-setting-btn', {\n    props: ['site'],\n    methods: {\n        deleteSite: function () {\n            this.$http.delete('/actions/admin/sites/delete/' + this.site.uid)\n                .then((res) => this.$bus.$emit('show-success-message', res.message))\n                .catch((err) => this.$bus.$emit('show-error-message', err.message));\n        },\n        deactivateSite: function () {\n            console.log('Deactivating...');\n            this.$http.post('/actions/admin/sites/deactivate/' + this.site.uid)\n                .then((result) => this.$bus.$emit('show-modal', result.data))\n                .catch((error) => this.$bus.$emit('show-error-message', error.message))\n        },\n        tokenJump: function () {\n            let data = {}; // this has a token and should be on this or something\n            let url = '//' + this.site.hostname + '/actions/admin/sites/token_login?callback=angular.callbacks._0&token=' + data.token;\n            this.$http.jsonp(url)\n                .then((result) => {\n                    this.$bus.$emit('show-success-message', result.message);\n                    setTimeout(() => window.location = `//${this.site.hostname}/kronos`, 1500);\n                })\n                .catch((err) => this.$bus.$emit('show-error-message', err.message));\n        }\n    },\n    template: `\n        <div class=\"btn-group site-setting-btn-group\">\n            <a class=\"btn btn-standard site-settings-btn\" :href=\"'/kronos/sites/' + site.uid\">\n                <i class=\"fa fa-cog\"></i>&nbsp;Edit Site\n            </a>\n            <button type=\"button\" class=\"btn btn-sm btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n                <i class=\"fa fa-sm fa-chevron-down\"></i>\n            </button>\n            <ul class=\"dropdown-menu\" role=\"menu\">\n                <li><a @click=\"deactivateSite\"><i class=\"fa fa-fw fa-remove\"></i>&nbsp;Deactivate</a></li>\n            </ul>\n        </div>\n   `\n});\n","Vue.component('inactive-site-setting-btn', {\n    props: ['site'],\n    methods: {\n        activateSite: function () {\n            this.$http.post('/actions/admin/sites/activate/' + this.site.uid)\n                .then((res) => this.$bus.$emit('show-modal', res.data))\n                .catch((err) => this.$bus.$emit('show-error-message', err.message))\n        },\n        deleteSite: function () {\n            this.$http.delete('/actions/admin/sites/delete/' + this.site.uid)\n                .then((res) => this.$bus.$emit('show-success-message', res.message))\n                .catch((err) => this.$bus.$emit('show-error-message', err.message));\n        }\n    },\n    template: `\n        <div class=\"btn-group site-setting-btn-group\">\n            <a class=\"btn btn-standard site-settings-btn\" :href=\"'/kronos/sites/' + site.uid\">\n                <i class=\"fa fa-cog\"></i>&nbsp;Edit Site\n            </a>\n            <button type=\"button\" class=\"btn btn-sm btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n                <i class=\"fa fa-sm fa-chevron-down\"></i>\n            </button>\n            <ul class=\"dropdown-menu\" role=\"menu\">\n                <li><a @click=\"activateSite\"><i class=\"fa fa-fw fa-plus\"></i>&nbsp;Activate</a></li>\n                <li><a @click=\"deleteSite\"><i class=\"fa fa-fw fa-trash\"></i>&nbsp;Delete</a></li>\n            </ul>\n        </div>\n   `\n});\n","Vue.component('site-grid', {\n    created: function () {\n        this.$bus.$on('update-site-list', (params) => this.refreshData(params));\n        this.$bus.$on('update-site-list-type', (siteType) => this.handleSiteTypeChange(siteType));\n        this.refreshData({siteType: this.siteType});\n    },\n    data: function () {\n        return {\n            siteType: 'active',\n            siteList: [],\n            sortDirection: '',\n            sortProp: ''\n        }\n    },\n    methods: {\n        handleSiteTypeChange: function (siteType) {\n            this.siteType = siteType;\n            this.$bus.$emit('update-site-records-type', siteType);\n            this.refreshData({searchTerm: ''});\n        },\n        refreshData: function (qsVars) {\n            this.$http.get('/actions/kronos/sites', this._buildQuery(qsVars))\n                .then((res) => this._updateSiteData(res && res.data || {}))\n                .catch(err => this.$bus.$emit('show-error-message', err));\n        },\n        sortSites: function (sortProp) {\n            alert(sortProp);\n            this.sortDirection = sortProp === this.sortProp && this.sortDirection === 'asc' ? 'desc' : 'asc';\n            this.sortProp = sortProp;\n            this.refreshData({sort: this.sortDirection, sortProp});\n        },\n        _buildQuery: function (qsVars) {\n            qsVars.siteType = this.siteType;\n            qsVars.searchTerm = typeof(qsVars.searchTerm) === 'string' ? qsVars.searchTerm : this._searchTerm;\n            this._searchTerm = qsVars.searchTerm;\n            return qsVars;\n        },\n        _updateSiteData: function (data) {\n            let siteList = data.siteList || [];\n            let maxNumberOfPages = data.maxNumberOfPages || 1;\n            if (siteList && siteList.length) {\n                this.siteList = siteList;\n                this.$bus.$emit('site-update-page-numbers', maxNumberOfPages);\n            }\n        }\n    },\n    template: `\n        <div class=\"site-data-grid panel panel-default\">\n            <div class=\"panel-heading\">\n                {{siteType}} Sites&nbsp;<i class=\"fa fa-info-circle\" data-toggle=\"tooltip\" data-placement=\"bottom\"></i>\n            </div>\n            <table class=\"table\">\n                <thead>\n                    <tr>                \n                        <th><span @click=\"sortSites('displayName')\">Display Name</span></th>\n                        <th><span @click=\"sortSites('hostname')\">Hostname</span></th>\n                        <th><span @click=\"sortSites('created')\">Date Added</span></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <site-record v-for=\"site in siteList\" :key=\"site.uid\" :site=\"site\" :site-type=\"siteType\"></site-record>\n                </tbody>\n            </table>\n        </div>\n    `\n});\n","Vue.component('site-list-controls', {\n    data: function () {\n        return {\n            siteType: 'active'\n        }\n    },\n    methods: {\n        changeSiteListType: function (siteType) {\n            this.siteType = siteType;\n            this.$bus.$emit('update-site-list-type', siteType);\n        }\n    },\n    template: `\n        <div class=\"site-list-controls-row\">\n            <a :class=\"{'active btn-primary': siteType === 'active', 'btn-standard': siteType !== 'active', 'btn active-site-button': true}\" \n                @click=\"changeSiteListType('active')\">Active Sites</a>\n            <a :class=\"{'active btn-primary': siteType === 'inactive', 'btn-standard': siteType !== 'inactive', 'btn active-site-button': true}\" \n                @click=\"changeSiteListType('inactive')\">Inactive Sites</a>\n        </div>\n    `\n});\n","Vue.component('site-pagination-bar', {\n    created: function () {\n        this.$bus.$on('site-update-page-numbers', (pageNumber) => this.maxPageNumber = pageNumber);\n        this.$bus.$on('update-site-list-type', (siteType) => this.handleSiteTypeChange(siteType));\n    },\n    data: function () {\n        return {\n            maxPageNumber: 1,\n            pageNumber: 1,\n            siteType: 'active'\n        }\n    },\n    methods: {\n        handleSiteTypeChange: function (siteType) {\n            this.siteType = siteType;\n            this.pageNumber = 1;\n        },\n        nextPage: function () {\n            if (this.pageNumber >= this.maxPageNumber) {\n                return;\n            }\n            this.pageNumber++;\n            this.$bus.$emit('update-site-list', {siteType: this.siteType, pageNumber: this.pageNumber});\n        },\n        previousPage: function () {\n            if (this.pageNumber <= 1) {\n                return;\n            }\n            this.pageNumber--;\n            this.$bus.$emit('update-site-list', {siteType: this.siteType, pageNumber: this.pageNumber});\n        }\n    },\n    template: `\n        <div class=\"site-pagination-row\">\n            <a :class=\"{'disabled': pageNumber === 1, 'pagination-button btn pagination-button-prev':true}\" \n                @click=\"previousPage\"><span class=\"fa fa-fw fa-chevron-left\"></span><span>Previous</span></a>\n            <span class=\"pagination-button-spacer\"></span>\n            <a :class=\"{'disabled': pageNumber >= maxPageNumber, 'pagination-button btn pagination-button-next':true}\" \n                @click=\"nextPage\">\n                <span>Next</span><span class=\"fa fa-fw fa-chevron-right\"></span>\n            </a>\n        </div>\n    `\n});\n","Vue.component('site-record', {\n    props: ['site', 'siteType'],\n    data: function () {\n        return {\n            _site: this.site,\n            _siteType: this.siteType,\n            _searchTerm: ''\n        };\n    },\n    methods: {\n        authUserToSite: function () {\n            this.$http.post(`/actions/admin/sites/auth_token/${encodeURIComponent(this.site.uid)}`)\n                .then((res) => {\n                    this.$bus.$emit('show-success-message', res.data.message);\n                    this._handleTokenCreation(res.data.data);\n                })\n                .catch((err) => this.$bus.$emit('show-error-message', err.message));\n        },\n        _handleTokenCreation: function (data) {\n            let url = '//' + this.site.hostname + '/actions/admin/sites/token_login?token=' + data.token;\n            this.$http.jsonp(url)\n                .then((result) => {\n                    this.$bus.$emit('show-success-message', result.data.message);\n                    setTimeout(() => window.location = `//${this.site.hostname}/kronos`, 1500);\n                })\n                .catch((err) => this.$bus.$emit('show-error-message', err.message));\n        }\n    },\n    template: `\n        <tr>\n            <td class=\"simulated-link\" @click=\"authUserToSite\">{{site.displayName}}</td>\n            <td>{{site.hostname}}</td>\n            <td>{{site.created | format-date}}</td>\n            <td class=\"setting-column\">\n                <active-site-setting-btn v-if=\"siteType === 'active'\" :site=\"site\"></active-site-setting-btn>\n                <inactive-site-setting-btn v-if=\"siteType === 'inactive'\" :site=\"site\"></inactive-site-setting-btn>\n            </td>\n        </tr>\n    `\n});\n","Vue.component('site-search-bar', {\n    created: function () {\n        this.$bus.$on('update-site-list-type', (st) => this.handleSiteTypeChange(st));\n    },\n    data: function () {\n        return {\n            siteType: 'active',\n            searchTerm: ''\n        }\n    },\n    methods: {\n        handleSiteTypeChange: function(siteType) {\n            this.siteType = siteType;\n            this.searchTerm = '';\n        },\n        search: function () {\n            this.$bus.$emit('update-site-list', {siteType: this.siteType, searchTerm: this.searchTerm});\n        }\n    },\n    template: `\n        <div class=\"site-search-bar-row\">\n            <input class=\"form-control\" @keyup.enter=\"search\" v-model=\"searchTerm\">\n            <a class=\"btn btn-standard\" @click=\"search\">\n                <span class=\"fa fw fa-search\"></span>\n            </a>\n        </div>\n    `\n});\n","import './login'\n","Vue.component('loginForm', {\n    data: function () {\n        return {\n            defaultGlobalErrorMessage: 'Sorry, an error occurred.  Please try again later.',\n            username: '',\n            usernameError: '',\n            password: '',\n            passwordError: '',\n            globalError: ''\n        }\n    },\n    props: ['postQuery'],\n    methods: {\n        login: function () {\n            this.usernameError = this.username && this.username.length >= 2 ? '' : 'Username is not long enough';\n            this.passwordError = this.password ? '' : 'Password is required';\n\n            if(this.passwordError || this.usernameError) {\n                return;\n            }\n            this.$http.post('/actions/kronos/login' + (this.postQuery || ''), {\n                username: this.username,\n                password: this.password\n            }).then((result) => {\n                let data = result.data || {};\n                if(data.url) {\n                    return window.location.href = result.data.url;\n                }\n                this.globalError = data.error || this.defaultGlobalErrorMessage;\n            }).catch(() => {\n                this.globalError = this.defaultGlobalErrorMessage;\n            });\n        }\n    },\n    template: `\n        <div class=\"login-form\">\n            <span :if=\"globalError\" class=\"error global-error\"> {{globalError}}</span>\n            <label>Username or email address</label>\n            <input class=\"form-control input-field\" :class=\"{'error': usernameError}\" v-model=\"username\" required>\n            <span class=\"error\">{{usernameError}}</span>\n            <label>Password</label>\n            <input class=\"form-control input-field\" :class=\"{'error': passwordError}\" type=\"password\" v-model=\"password\" required>\n            <span :if=\"passwordError\" class=\"error\">{{passwordError}}</span>\n            <button class=\"btn login-btn\" v-on:click=\"login\">Login</button>\n        </div>\n   `\n});\n"],"sourceRoot":""}